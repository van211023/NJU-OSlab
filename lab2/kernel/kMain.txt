
kMain.elf：     文件格式 elf32-i386


Disassembly of section .text:

00100000 <abort>:
  100000:	55                   	push   %ebp
  100001:	89 e5                	mov    %esp,%ebp
  100003:	57                   	push   %edi
  100004:	56                   	push   %esi
  100005:	53                   	push   %ebx
  100006:	83 ec 1c             	sub    $0x1c,%esp
  100009:	e8 95 00 00 00       	call   1000a3 <__x86.get_pc_thunk.bx>
  10000e:	81 c3 f2 2f 00 00    	add    $0x2ff2,%ebx
  100014:	8b 4d 08             	mov    0x8(%ebp),%ecx
  100017:	fa                   	cli    
  100018:	8a 11                	mov    (%ecx),%dl
  10001a:	8d 83 32 00 00 00    	lea    0x32(%ebx),%eax
  100020:	84 d2                	test   %dl,%dl
  100022:	74 0b                	je     10002f <abort+0x2f>
  100024:	41                   	inc    %ecx
  100025:	40                   	inc    %eax
  100026:	88 50 ff             	mov    %dl,-0x1(%eax)
  100029:	8a 11                	mov    (%ecx),%dl
  10002b:	84 d2                	test   %dl,%dl
  10002d:	75 f5                	jne    100024 <abort+0x24>
  10002f:	8d 70 01             	lea    0x1(%eax),%esi
  100032:	c6 00 3a             	movb   $0x3a,(%eax)
  100035:	8d 8b 3d 01 00 00    	lea    0x13d(%ebx),%ecx
  10003b:	bf 0a 00 00 00       	mov    $0xa,%edi
  100040:	49                   	dec    %ecx
  100041:	8b 45 0c             	mov    0xc(%ebp),%eax
  100044:	99                   	cltd   
  100045:	f7 ff                	idiv   %edi
  100047:	8d 42 30             	lea    0x30(%edx),%eax
  10004a:	88 45 e7             	mov    %al,-0x19(%ebp)
  10004d:	88 01                	mov    %al,(%ecx)
  10004f:	b8 67 66 66 66       	mov    $0x66666667,%eax
  100054:	f7 6d 0c             	imull  0xc(%ebp)
  100057:	c1 fa 02             	sar    $0x2,%edx
  10005a:	8b 45 0c             	mov    0xc(%ebp),%eax
  10005d:	c1 f8 1f             	sar    $0x1f,%eax
  100060:	29 c2                	sub    %eax,%edx
  100062:	89 55 0c             	mov    %edx,0xc(%ebp)
  100065:	75 d9                	jne    100040 <abort+0x40>
  100067:	41                   	inc    %ecx
  100068:	46                   	inc    %esi
  100069:	8a 45 e7             	mov    -0x19(%ebp),%al
  10006c:	88 46 ff             	mov    %al,-0x1(%esi)
  10006f:	8a 01                	mov    (%ecx),%al
  100071:	88 45 e7             	mov    %al,-0x19(%ebp)
  100074:	84 c0                	test   %al,%al
  100076:	75 ef                	jne    100067 <abort+0x67>
  100078:	c6 06 0a             	movb   $0xa,(%esi)
  10007b:	0f be 83 20 00 00 00 	movsbl 0x20(%ebx),%eax
  100082:	84 c0                	test   %al,%al
  100084:	74 1a                	je     1000a0 <abort+0xa0>
  100086:	8d b3 20 00 00 00    	lea    0x20(%ebx),%esi
  10008c:	83 ec 0c             	sub    $0xc,%esp
  10008f:	50                   	push   %eax
  100090:	e8 83 00 00 00       	call   100118 <putChar>
  100095:	46                   	inc    %esi
  100096:	0f be 06             	movsbl (%esi),%eax
  100099:	83 c4 10             	add    $0x10,%esp
  10009c:	84 c0                	test   %al,%al
  10009e:	75 ec                	jne    10008c <abort+0x8c>
  1000a0:	f4                   	hlt    
  1000a1:	eb fd                	jmp    1000a0 <abort+0xa0>

001000a3 <__x86.get_pc_thunk.bx>:
  1000a3:	8b 1c 24             	mov    (%esp),%ebx
  1000a6:	c3                   	ret    
  1000a7:	90                   	nop

001000a8 <kEntry>:
  1000a8:	55                   	push   %ebp
  1000a9:	89 e5                	mov    %esp,%ebp
  1000ab:	53                   	push   %ebx
  1000ac:	50                   	push   %eax
  1000ad:	e8 f1 ff ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  1000b2:	81 c3 4e 2f 00 00    	add    $0x2f4e,%ebx
  1000b8:	e8 17 00 00 00       	call   1000d4 <initSerial>
  1000bd:	83 ec 0c             	sub    $0xc,%esp
  1000c0:	6a 23                	push   $0x23
  1000c2:	e8 51 00 00 00       	call   100118 <putChar>
  1000c7:	e8 c0 02 00 00       	call   10038c <loadUMain>
  1000cc:	83 c4 10             	add    $0x10,%esp
  1000cf:	eb fe                	jmp    1000cf <kEntry+0x27>
  1000d1:	66 90                	xchg   %ax,%ax
  1000d3:	90                   	nop

001000d4 <initSerial>:
  1000d4:	55                   	push   %ebp
  1000d5:	89 e5                	mov    %esp,%ebp
  1000d7:	56                   	push   %esi
  1000d8:	53                   	push   %ebx
  1000d9:	31 db                	xor    %ebx,%ebx
  1000db:	be f9 03 00 00       	mov    $0x3f9,%esi
  1000e0:	88 d8                	mov    %bl,%al
  1000e2:	89 f2                	mov    %esi,%edx
  1000e4:	ee                   	out    %al,(%dx)
  1000e5:	b9 fb 03 00 00       	mov    $0x3fb,%ecx
  1000ea:	b0 80                	mov    $0x80,%al
  1000ec:	89 ca                	mov    %ecx,%edx
  1000ee:	ee                   	out    %al,(%dx)
  1000ef:	b0 01                	mov    $0x1,%al
  1000f1:	ba f8 03 00 00       	mov    $0x3f8,%edx
  1000f6:	ee                   	out    %al,(%dx)
  1000f7:	88 d8                	mov    %bl,%al
  1000f9:	89 f2                	mov    %esi,%edx
  1000fb:	ee                   	out    %al,(%dx)
  1000fc:	b0 03                	mov    $0x3,%al
  1000fe:	89 ca                	mov    %ecx,%edx
  100100:	ee                   	out    %al,(%dx)
  100101:	b0 c7                	mov    $0xc7,%al
  100103:	ba fa 03 00 00       	mov    $0x3fa,%edx
  100108:	ee                   	out    %al,(%dx)
  100109:	b0 0b                	mov    $0xb,%al
  10010b:	ba fc 03 00 00       	mov    $0x3fc,%edx
  100110:	ee                   	out    %al,(%dx)
  100111:	5b                   	pop    %ebx
  100112:	5e                   	pop    %esi
  100113:	5d                   	pop    %ebp
  100114:	c3                   	ret    
  100115:	8d 76 00             	lea    0x0(%esi),%esi

00100118 <putChar>:
  100118:	55                   	push   %ebp
  100119:	89 e5                	mov    %esp,%ebp
  10011b:	8b 4d 08             	mov    0x8(%ebp),%ecx
  10011e:	ba fd 03 00 00       	mov    $0x3fd,%edx
  100123:	90                   	nop
  100124:	ec                   	in     (%dx),%al
  100125:	a8 20                	test   $0x20,%al
  100127:	74 fb                	je     100124 <putChar+0xc>
  100129:	ba f8 03 00 00       	mov    $0x3f8,%edx
  10012e:	88 c8                	mov    %cl,%al
  100130:	ee                   	out    %al,(%dx)
  100131:	5d                   	pop    %ebp
  100132:	c3                   	ret    
  100133:	90                   	nop

00100134 <putStr>:
  100134:	55                   	push   %ebp
  100135:	89 e5                	mov    %esp,%ebp
  100137:	57                   	push   %edi
  100138:	56                   	push   %esi
  100139:	53                   	push   %ebx
  10013a:	8b 7d 08             	mov    0x8(%ebp),%edi
  10013d:	85 ff                	test   %edi,%edi
  10013f:	74 28                	je     100169 <putStr+0x35>
  100141:	8a 1f                	mov    (%edi),%bl
  100143:	84 db                	test   %bl,%bl
  100145:	74 22                	je     100169 <putStr+0x35>
  100147:	b9 fd 03 00 00       	mov    $0x3fd,%ecx
  10014c:	be f8 03 00 00       	mov    $0x3f8,%esi
  100151:	8d 76 00             	lea    0x0(%esi),%esi
  100154:	89 ca                	mov    %ecx,%edx
  100156:	ec                   	in     (%dx),%al
  100157:	a8 20                	test   $0x20,%al
  100159:	74 f9                	je     100154 <putStr+0x20>
  10015b:	88 d8                	mov    %bl,%al
  10015d:	89 f2                	mov    %esi,%edx
  10015f:	ee                   	out    %al,(%dx)
  100160:	47                   	inc    %edi
  100161:	74 06                	je     100169 <putStr+0x35>
  100163:	8a 1f                	mov    (%edi),%bl
  100165:	84 db                	test   %bl,%bl
  100167:	75 eb                	jne    100154 <putStr+0x20>
  100169:	5b                   	pop    %ebx
  10016a:	5e                   	pop    %esi
  10016b:	5f                   	pop    %edi
  10016c:	5d                   	pop    %ebp
  10016d:	c3                   	ret    
  10016e:	66 90                	xchg   %ax,%ax

00100170 <putNum>:
  100170:	55                   	push   %ebp
  100171:	89 e5                	mov    %esp,%ebp
  100173:	57                   	push   %edi
  100174:	56                   	push   %esi
  100175:	53                   	push   %ebx
  100176:	8b 4d 08             	mov    0x8(%ebp),%ecx
  100179:	85 c9                	test   %ecx,%ecx
  10017b:	75 1b                	jne    100198 <putNum+0x28>
  10017d:	ba fd 03 00 00       	mov    $0x3fd,%edx
  100182:	66 90                	xchg   %ax,%ax
  100184:	ec                   	in     (%dx),%al
  100185:	a8 20                	test   $0x20,%al
  100187:	74 fb                	je     100184 <putNum+0x14>
  100189:	b0 30                	mov    $0x30,%al
  10018b:	ba f8 03 00 00       	mov    $0x3f8,%edx
  100190:	ee                   	out    %al,(%dx)
  100191:	5b                   	pop    %ebx
  100192:	5e                   	pop    %esi
  100193:	5f                   	pop    %edi
  100194:	5d                   	pop    %ebp
  100195:	c3                   	ret    
  100196:	66 90                	xchg   %ax,%ax
  100198:	78 3b                	js     1001d5 <putNum+0x65>
  10019a:	bf 0a 00 00 00       	mov    $0xa,%edi
  10019f:	bb fd 03 00 00       	mov    $0x3fd,%ebx
  1001a4:	89 c8                	mov    %ecx,%eax
  1001a6:	99                   	cltd   
  1001a7:	f7 ff                	idiv   %edi
  1001a9:	8d 72 30             	lea    0x30(%edx),%esi
  1001ac:	89 da                	mov    %ebx,%edx
  1001ae:	ec                   	in     (%dx),%al
  1001af:	a8 20                	test   $0x20,%al
  1001b1:	74 f9                	je     1001ac <putNum+0x3c>
  1001b3:	ba f8 03 00 00       	mov    $0x3f8,%edx
  1001b8:	89 f0                	mov    %esi,%eax
  1001ba:	ee                   	out    %al,(%dx)
  1001bb:	b8 67 66 66 66       	mov    $0x66666667,%eax
  1001c0:	f7 e9                	imul   %ecx
  1001c2:	89 d0                	mov    %edx,%eax
  1001c4:	c1 f8 02             	sar    $0x2,%eax
  1001c7:	c1 f9 1f             	sar    $0x1f,%ecx
  1001ca:	29 c8                	sub    %ecx,%eax
  1001cc:	89 c1                	mov    %eax,%ecx
  1001ce:	75 d4                	jne    1001a4 <putNum+0x34>
  1001d0:	5b                   	pop    %ebx
  1001d1:	5e                   	pop    %esi
  1001d2:	5f                   	pop    %edi
  1001d3:	5d                   	pop    %ebp
  1001d4:	c3                   	ret    
  1001d5:	ba fd 03 00 00       	mov    $0x3fd,%edx
  1001da:	66 90                	xchg   %ax,%ax
  1001dc:	ec                   	in     (%dx),%al
  1001dd:	a8 20                	test   $0x20,%al
  1001df:	74 fb                	je     1001dc <putNum+0x6c>
  1001e1:	b0 2d                	mov    $0x2d,%al
  1001e3:	ba f8 03 00 00       	mov    $0x3f8,%edx
  1001e8:	ee                   	out    %al,(%dx)
  1001e9:	f7 d9                	neg    %ecx
  1001eb:	eb ad                	jmp    10019a <putNum+0x2a>
  1001ed:	66 90                	xchg   %ax,%ax
  1001ef:	90                   	nop

001001f0 <waitDisk>:
  1001f0:	55                   	push   %ebp
  1001f1:	89 e5                	mov    %esp,%ebp
  1001f3:	ba f7 01 00 00       	mov    $0x1f7,%edx
  1001f8:	ec                   	in     (%dx),%al
  1001f9:	83 e0 c0             	and    $0xffffffc0,%eax
  1001fc:	3c 40                	cmp    $0x40,%al
  1001fe:	75 f8                	jne    1001f8 <waitDisk+0x8>
  100200:	5d                   	pop    %ebp
  100201:	c3                   	ret    
  100202:	66 90                	xchg   %ax,%ax

00100204 <readSect>:
  100204:	55                   	push   %ebp
  100205:	89 e5                	mov    %esp,%ebp
  100207:	53                   	push   %ebx
  100208:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  10020b:	bb f7 01 00 00       	mov    $0x1f7,%ebx
  100210:	89 da                	mov    %ebx,%edx
  100212:	ec                   	in     (%dx),%al
  100213:	83 e0 c0             	and    $0xffffffc0,%eax
  100216:	3c 40                	cmp    $0x40,%al
  100218:	75 f6                	jne    100210 <readSect+0xc>
  10021a:	b0 01                	mov    $0x1,%al
  10021c:	ba f2 01 00 00       	mov    $0x1f2,%edx
  100221:	ee                   	out    %al,(%dx)
  100222:	ba f3 01 00 00       	mov    $0x1f3,%edx
  100227:	88 c8                	mov    %cl,%al
  100229:	ee                   	out    %al,(%dx)
  10022a:	89 c8                	mov    %ecx,%eax
  10022c:	c1 f8 08             	sar    $0x8,%eax
  10022f:	ba f4 01 00 00       	mov    $0x1f4,%edx
  100234:	ee                   	out    %al,(%dx)
  100235:	89 c8                	mov    %ecx,%eax
  100237:	c1 f8 10             	sar    $0x10,%eax
  10023a:	ba f5 01 00 00       	mov    $0x1f5,%edx
  10023f:	ee                   	out    %al,(%dx)
  100240:	89 c8                	mov    %ecx,%eax
  100242:	c1 f8 18             	sar    $0x18,%eax
  100245:	83 c8 e0             	or     $0xffffffe0,%eax
  100248:	ba f6 01 00 00       	mov    $0x1f6,%edx
  10024d:	ee                   	out    %al,(%dx)
  10024e:	b0 20                	mov    $0x20,%al
  100250:	89 da                	mov    %ebx,%edx
  100252:	ee                   	out    %al,(%dx)
  100253:	ba f7 01 00 00       	mov    $0x1f7,%edx
  100258:	ec                   	in     (%dx),%al
  100259:	83 e0 c0             	and    $0xffffffc0,%eax
  10025c:	3c 40                	cmp    $0x40,%al
  10025e:	75 f8                	jne    100258 <readSect+0x54>
  100260:	8b 4d 08             	mov    0x8(%ebp),%ecx
  100263:	8d 99 00 02 00 00    	lea    0x200(%ecx),%ebx
  100269:	ba f0 01 00 00       	mov    $0x1f0,%edx
  10026e:	66 90                	xchg   %ax,%ax
  100270:	ed                   	in     (%dx),%eax
  100271:	89 01                	mov    %eax,(%ecx)
  100273:	83 c1 04             	add    $0x4,%ecx
  100276:	39 d9                	cmp    %ebx,%ecx
  100278:	75 f6                	jne    100270 <readSect+0x6c>
  10027a:	5b                   	pop    %ebx
  10027b:	5d                   	pop    %ebp
  10027c:	c3                   	ret    
  10027d:	66 90                	xchg   %ax,%ax
  10027f:	90                   	nop

00100280 <initSeg>:
  100280:	55                   	push   %ebp
  100281:	89 e5                	mov    %esp,%ebp
  100283:	53                   	push   %ebx
  100284:	e8 b5 01 00 00       	call   10043e <__x86.get_pc_thunk.dx>
  100289:	81 c2 77 2d 00 00    	add    $0x2d77,%edx
  10028f:	c7 c0 60 32 10 00    	mov    $0x103260,%eax
  100295:	c7 40 08 ff ff 00 00 	movl   $0xffff,0x8(%eax)
  10029c:	c7 40 0c 00 9a cf 00 	movl   $0xcf9a00,0xc(%eax)
  1002a3:	c7 40 10 ff ff 00 00 	movl   $0xffff,0x10(%eax)
  1002aa:	c7 40 14 00 92 cf 00 	movl   $0xcf9200,0x14(%eax)
  1002b1:	c7 40 18 ff 00 00 00 	movl   $0xff,0x18(%eax)
  1002b8:	c7 40 1c 20 fa c0 00 	movl   $0xc0fa20,0x1c(%eax)
  1002bf:	c7 40 20 ff 00 00 00 	movl   $0xff,0x20(%eax)
  1002c6:	c7 40 24 20 f2 c0 00 	movl   $0xc0f220,0x24(%eax)
  1002cd:	66 c7 40 28 63 00    	movw   $0x63,0x28(%eax)
  1002d3:	c7 c1 a0 32 10 00    	mov    $0x1032a0,%ecx
  1002d9:	66 89 48 2a          	mov    %cx,0x2a(%eax)
  1002dd:	89 cb                	mov    %ecx,%ebx
  1002df:	c1 eb 10             	shr    $0x10,%ebx
  1002e2:	88 58 2c             	mov    %bl,0x2c(%eax)
  1002e5:	66 c7 40 2d 89 40    	movw   $0x4089,0x2d(%eax)
  1002eb:	89 cb                	mov    %ecx,%ebx
  1002ed:	c1 eb 18             	shr    $0x18,%ebx
  1002f0:	88 58 2f             	mov    %bl,0x2f(%eax)
  1002f3:	66 c7 82 40 01 00 00 	movw   $0x37,0x140(%edx)
  1002fa:	37 00 
  1002fc:	66 89 82 42 01 00 00 	mov    %ax,0x142(%edx)
  100303:	c1 e8 10             	shr    $0x10,%eax
  100306:	66 89 82 44 01 00 00 	mov    %ax,0x144(%edx)
  10030d:	8d 82 40 01 00 00    	lea    0x140(%edx),%eax
  100313:	0f 01 10             	lgdtl  (%eax)
  100316:	c7 41 04 ff ff 1f 00 	movl   $0x1fffff,0x4(%ecx)
  10031d:	c7 41 08 10 00 00 00 	movl   $0x10,0x8(%ecx)
  100324:	b8 28 00 00 00       	mov    $0x28,%eax
  100329:	0f 00 d8             	ltr    %ax
  10032c:	b8 10 00 00 00       	mov    $0x10,%eax
  100331:	8e d8                	mov    %eax,%ds
  100333:	8e d0                	mov    %eax,%ss
  100335:	31 c0                	xor    %eax,%eax
  100337:	0f 00 d0             	lldt   %ax
  10033a:	5b                   	pop    %ebx
  10033b:	5d                   	pop    %ebp
  10033c:	c3                   	ret    
  10033d:	8d 76 00             	lea    0x0(%esi),%esi

00100340 <enterUserSpace>:
  100340:	55                   	push   %ebp
  100341:	89 e5                	mov    %esp,%ebp
  100343:	53                   	push   %ebx
  100344:	83 ec 10             	sub    $0x10,%esp
  100347:	e8 57 fd ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  10034c:	81 c3 b4 2c 00 00    	add    $0x2cb4,%ebx
  100352:	6a 2a                	push   $0x2a
  100354:	e8 bf fd ff ff       	call   100118 <putChar>
  100359:	b8 23 00 00 00       	mov    $0x23,%eax
  10035e:	50                   	push   %eax
  10035f:	b8 ff ff 2f 00       	mov    $0x2fffff,%eax
  100364:	50                   	push   %eax
  100365:	9c                   	pushf  
  100366:	58                   	pop    %eax
  100367:	80 cc 02             	or     $0x2,%ah
  10036a:	50                   	push   %eax
  10036b:	b8 1b 00 00 00       	mov    $0x1b,%eax
  100370:	50                   	push   %eax
  100371:	8b 45 08             	mov    0x8(%ebp),%eax
  100374:	50                   	push   %eax
  100375:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
  10037c:	e8 97 fd ff ff       	call   100118 <putChar>
  100381:	cf                   	iret   
  100382:	83 c4 10             	add    $0x10,%esp
  100385:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100388:	c9                   	leave  
  100389:	c3                   	ret    
  10038a:	66 90                	xchg   %ax,%ax

0010038c <loadUMain>:
  10038c:	55                   	push   %ebp
  10038d:	89 e5                	mov    %esp,%ebp
  10038f:	57                   	push   %edi
  100390:	56                   	push   %esi
  100391:	53                   	push   %ebx
  100392:	83 ec 1c             	sub    $0x1c,%esp
  100395:	e8 09 fd ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  10039a:	81 c3 66 2c 00 00    	add    $0x2c66,%ebx
  1003a0:	be c9 00 00 00       	mov    $0xc9,%esi
  1003a5:	bf 00 00 20 00       	mov    $0x200000,%edi
  1003aa:	66 90                	xchg   %ax,%ax
  1003ac:	83 ec 08             	sub    $0x8,%esp
  1003af:	56                   	push   %esi
  1003b0:	57                   	push   %edi
  1003b1:	e8 4e fe ff ff       	call   100204 <readSect>
  1003b6:	81 c7 00 02 00 00    	add    $0x200,%edi
  1003bc:	46                   	inc    %esi
  1003bd:	83 c4 10             	add    $0x10,%esp
  1003c0:	81 fe 91 01 00 00    	cmp    $0x191,%esi
  1003c6:	75 e4                	jne    1003ac <loadUMain+0x20>
  1003c8:	a1 18 00 20 00       	mov    0x200018,%eax
  1003cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  1003d0:	83 ec 0c             	sub    $0xc,%esp
  1003d3:	6a 2d                	push   $0x2d
  1003d5:	e8 3e fd ff ff       	call   100118 <putChar>
  1003da:	a1 1c 00 20 00       	mov    0x20001c,%eax
  1003df:	05 00 00 20 00       	add    $0x200000,%eax
  1003e4:	0f b7 15 2c 00 20 00 	movzwl 0x20002c,%edx
  1003eb:	c1 e2 05             	shl    $0x5,%edx
  1003ee:	01 c2                	add    %eax,%edx
  1003f0:	83 c4 10             	add    $0x10,%esp
  1003f3:	39 d0                	cmp    %edx,%eax
  1003f5:	72 0c                	jb     100403 <loadUMain+0x77>
  1003f7:	eb 27                	jmp    100420 <loadUMain+0x94>
  1003f9:	8d 76 00             	lea    0x0(%esi),%esi
  1003fc:	83 c0 20             	add    $0x20,%eax
  1003ff:	39 c2                	cmp    %eax,%edx
  100401:	76 1d                	jbe    100420 <loadUMain+0x94>
  100403:	83 38 01             	cmpl   $0x1,(%eax)
  100406:	75 f4                	jne    1003fc <loadUMain+0x70>
  100408:	8b 48 04             	mov    0x4(%eax),%ecx
  10040b:	8d b1 00 00 20 00    	lea    0x200000(%ecx),%esi
  100411:	8b 48 10             	mov    0x10(%eax),%ecx
  100414:	8b 78 0c             	mov    0xc(%eax),%edi
  100417:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
  100419:	83 c0 20             	add    $0x20,%eax
  10041c:	39 c2                	cmp    %eax,%edx
  10041e:	77 e3                	ja     100403 <loadUMain+0x77>
  100420:	83 ec 0c             	sub    $0xc,%esp
  100423:	6a 0a                	push   $0xa
  100425:	e8 ee fc ff ff       	call   100118 <putChar>
  10042a:	58                   	pop    %eax
  10042b:	ff 75 e4             	pushl  -0x1c(%ebp)
  10042e:	e8 0d ff ff ff       	call   100340 <enterUserSpace>
  100433:	83 c4 10             	add    $0x10,%esp
  100436:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100439:	5b                   	pop    %ebx
  10043a:	5e                   	pop    %esi
  10043b:	5f                   	pop    %edi
  10043c:	5d                   	pop    %ebp
  10043d:	c3                   	ret    

0010043e <__x86.get_pc_thunk.dx>:
  10043e:	8b 14 24             	mov    (%esp),%edx
  100441:	c3                   	ret    
  100442:	66 90                	xchg   %ax,%ax

00100444 <initVga>:
  100444:	55                   	push   %ebp
  100445:	89 e5                	mov    %esp,%ebp
  100447:	56                   	push   %esi
  100448:	53                   	push   %ebx
  100449:	e8 1d 01 00 00       	call   10056b <__x86.get_pc_thunk.ax>
  10044e:	05 b2 2b 00 00       	add    $0x2bb2,%eax
  100453:	c7 80 50 01 00 00 00 	movl   $0x0,0x150(%eax)
  10045a:	00 00 00 
  10045d:	c7 80 4c 01 00 00 00 	movl   $0x0,0x14c(%eax)
  100464:	00 00 00 
  100467:	c7 80 48 01 00 00 00 	movl   $0x0,0x148(%eax)
  10046e:	00 00 00 
  100471:	b8 00 80 0b 00       	mov    $0xb8000,%eax
  100476:	ba 00 0c 00 00       	mov    $0xc00,%edx
  10047b:	90                   	nop
  10047c:	66 89 10             	mov    %dx,(%eax)
  10047f:	83 c0 02             	add    $0x2,%eax
  100482:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  100487:	75 f3                	jne    10047c <initVga+0x38>
  100489:	be d4 03 00 00       	mov    $0x3d4,%esi
  10048e:	b0 0f                	mov    $0xf,%al
  100490:	89 f2                	mov    %esi,%edx
  100492:	ee                   	out    %al,(%dx)
  100493:	31 c9                	xor    %ecx,%ecx
  100495:	bb d5 03 00 00       	mov    $0x3d5,%ebx
  10049a:	88 c8                	mov    %cl,%al
  10049c:	89 da                	mov    %ebx,%edx
  10049e:	ee                   	out    %al,(%dx)
  10049f:	b0 0e                	mov    $0xe,%al
  1004a1:	89 f2                	mov    %esi,%edx
  1004a3:	ee                   	out    %al,(%dx)
  1004a4:	88 c8                	mov    %cl,%al
  1004a6:	89 da                	mov    %ebx,%edx
  1004a8:	ee                   	out    %al,(%dx)
  1004a9:	5b                   	pop    %ebx
  1004aa:	5e                   	pop    %esi
  1004ab:	5d                   	pop    %ebp
  1004ac:	c3                   	ret    
  1004ad:	8d 76 00             	lea    0x0(%esi),%esi

001004b0 <clearScreen>:
  1004b0:	55                   	push   %ebp
  1004b1:	89 e5                	mov    %esp,%ebp
  1004b3:	b8 00 80 0b 00       	mov    $0xb8000,%eax
  1004b8:	ba 00 0c 00 00       	mov    $0xc00,%edx
  1004bd:	8d 76 00             	lea    0x0(%esi),%esi
  1004c0:	66 89 10             	mov    %dx,(%eax)
  1004c3:	83 c0 02             	add    $0x2,%eax
  1004c6:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  1004cb:	75 f3                	jne    1004c0 <clearScreen+0x10>
  1004cd:	5d                   	pop    %ebp
  1004ce:	c3                   	ret    
  1004cf:	90                   	nop

001004d0 <updateCursor>:
  1004d0:	55                   	push   %ebp
  1004d1:	89 e5                	mov    %esp,%ebp
  1004d3:	56                   	push   %esi
  1004d4:	53                   	push   %ebx
  1004d5:	8b 45 08             	mov    0x8(%ebp),%eax
  1004d8:	8d 0c 80             	lea    (%eax,%eax,4),%ecx
  1004db:	c1 e1 04             	shl    $0x4,%ecx
  1004de:	03 4d 0c             	add    0xc(%ebp),%ecx
  1004e1:	be d4 03 00 00       	mov    $0x3d4,%esi
  1004e6:	b0 0f                	mov    $0xf,%al
  1004e8:	89 f2                	mov    %esi,%edx
  1004ea:	ee                   	out    %al,(%dx)
  1004eb:	bb d5 03 00 00       	mov    $0x3d5,%ebx
  1004f0:	88 c8                	mov    %cl,%al
  1004f2:	89 da                	mov    %ebx,%edx
  1004f4:	ee                   	out    %al,(%dx)
  1004f5:	b0 0e                	mov    $0xe,%al
  1004f7:	89 f2                	mov    %esi,%edx
  1004f9:	ee                   	out    %al,(%dx)
  1004fa:	89 c8                	mov    %ecx,%eax
  1004fc:	c1 f8 08             	sar    $0x8,%eax
  1004ff:	89 da                	mov    %ebx,%edx
  100501:	ee                   	out    %al,(%dx)
  100502:	5b                   	pop    %ebx
  100503:	5e                   	pop    %esi
  100504:	5d                   	pop    %ebp
  100505:	c3                   	ret    
  100506:	66 90                	xchg   %ax,%ax

00100508 <scrollScreen>:
  100508:	55                   	push   %ebp
  100509:	89 e5                	mov    %esp,%ebp
  10050b:	e8 2e ff ff ff       	call   10043e <__x86.get_pc_thunk.dx>
  100510:	81 c2 f0 2a 00 00    	add    $0x2af0,%edx
  100516:	b8 00 80 0b 00       	mov    $0xb8000,%eax
  10051b:	c7 c2 20 33 10 00    	mov    $0x103320,%edx
  100521:	8d 76 00             	lea    0x0(%esi),%esi
  100524:	66 8b 08             	mov    (%eax),%cx
  100527:	66 89 8c 10 00 80 f4 	mov    %cx,-0xb8000(%eax,%edx,1)
  10052e:	ff 
  10052f:	83 c0 02             	add    $0x2,%eax
  100532:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  100537:	75 eb                	jne    100524 <scrollScreen+0x1c>
  100539:	b8 00 80 0b 00       	mov    $0xb8000,%eax
  10053e:	66 90                	xchg   %ax,%ax
  100540:	66 8b 8c 10 a0 80 f4 	mov    -0xb7f60(%eax,%edx,1),%cx
  100547:	ff 
  100548:	66 89 08             	mov    %cx,(%eax)
  10054b:	83 c0 02             	add    $0x2,%eax
  10054e:	3d 00 8f 0b 00       	cmp    $0xb8f00,%eax
  100553:	75 eb                	jne    100540 <scrollScreen+0x38>
  100555:	ba 00 0c 00 00       	mov    $0xc00,%edx
  10055a:	66 90                	xchg   %ax,%ax
  10055c:	66 89 10             	mov    %dx,(%eax)
  10055f:	83 c0 02             	add    $0x2,%eax
  100562:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  100567:	75 f3                	jne    10055c <scrollScreen+0x54>
  100569:	5d                   	pop    %ebp
  10056a:	c3                   	ret    

0010056b <__x86.get_pc_thunk.ax>:
  10056b:	8b 04 24             	mov    (%esp),%eax
  10056e:	c3                   	ret    
  10056f:	90                   	nop

00100570 <initKeyTable>:
  100570:	55                   	push   %ebp
  100571:	89 e5                	mov    %esp,%ebp
  100573:	e8 c6 fe ff ff       	call   10043e <__x86.get_pc_thunk.dx>
  100578:	81 c2 88 2a 00 00    	add    $0x2a88,%edx
  10057e:	c7 c0 e0 46 10 00    	mov    $0x1046e0,%eax
  100584:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  10058a:	c7 c0 c0 42 10 00    	mov    $0x1042c0,%eax
  100590:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  100596:	c7 82 60 01 00 00 00 	movl   $0x0,0x160(%edx)
  10059d:	00 00 00 
  1005a0:	8d 82 e0 01 00 00    	lea    0x1e0(%edx),%eax
  1005a6:	89 82 64 01 00 00    	mov    %eax,0x164(%edx)
  1005ac:	31 c0                	xor    %eax,%eax
  1005ae:	66 90                	xchg   %ax,%ax
  1005b0:	c6 84 10 e0 01 00 00 	movb   $0x0,0x1e0(%eax,%edx,1)
  1005b7:	00 
  1005b8:	c6 84 10 80 01 00 00 	movb   $0x0,0x180(%eax,%edx,1)
  1005bf:	00 
  1005c0:	40                   	inc    %eax
  1005c1:	83 f8 59             	cmp    $0x59,%eax
  1005c4:	75 ea                	jne    1005b0 <initKeyTable+0x40>
  1005c6:	c7 82 e2 01 00 00 31 	movl   $0x34333231,0x1e2(%edx)
  1005cd:	32 33 34 
  1005d0:	c7 82 e6 01 00 00 35 	movl   $0x38373635,0x1e6(%edx)
  1005d7:	36 37 38 
  1005da:	c7 82 ea 01 00 00 39 	movl   $0x3d2d3039,0x1ea(%edx)
  1005e1:	30 2d 3d 
  1005e4:	c7 82 82 01 00 00 21 	movl   $0x24234021,0x182(%edx)
  1005eb:	40 23 24 
  1005ee:	c7 82 86 01 00 00 25 	movl   $0x2a265e25,0x186(%edx)
  1005f5:	5e 26 2a 
  1005f8:	c7 82 8a 01 00 00 28 	movl   $0x2b5f2928,0x18a(%edx)
  1005ff:	29 5f 2b 
  100602:	c7 82 f0 01 00 00 71 	movl   $0x72657771,0x1f0(%edx)
  100609:	77 65 72 
  10060c:	c7 82 f4 01 00 00 74 	movl   $0x69757974,0x1f4(%edx)
  100613:	79 75 69 
  100616:	c7 82 f8 01 00 00 6f 	movl   $0x5d5b706f,0x1f8(%edx)
  10061d:	70 5b 5d 
  100620:	c6 82 fc 01 00 00 0a 	movb   $0xa,0x1fc(%edx)
  100627:	c7 82 90 01 00 00 51 	movl   $0x52455751,0x190(%edx)
  10062e:	57 45 52 
  100631:	c7 82 94 01 00 00 54 	movl   $0x49555954,0x194(%edx)
  100638:	59 55 49 
  10063b:	c7 82 98 01 00 00 4f 	movl   $0x7d7b504f,0x198(%edx)
  100642:	50 7b 7d 
  100645:	c6 82 9c 01 00 00 0a 	movb   $0xa,0x19c(%edx)
  10064c:	c7 82 fe 01 00 00 61 	movl   $0x66647361,0x1fe(%edx)
  100653:	73 64 66 
  100656:	c7 82 02 02 00 00 67 	movl   $0x6b6a6867,0x202(%edx)
  10065d:	68 6a 6b 
  100660:	c7 82 06 02 00 00 6c 	movl   $0x60273b6c,0x206(%edx)
  100667:	3b 27 60 
  10066a:	c7 82 9e 01 00 00 41 	movl   $0x46445341,0x19e(%edx)
  100671:	53 44 46 
  100674:	c7 82 a2 01 00 00 47 	movl   $0x4b4a4847,0x1a2(%edx)
  10067b:	48 4a 4b 
  10067e:	c7 82 a6 01 00 00 4c 	movl   $0x7e223a4c,0x1a6(%edx)
  100685:	3a 22 7e 
  100688:	c7 82 0b 02 00 00 5c 	movl   $0x63787a5c,0x20b(%edx)
  10068f:	7a 78 63 
  100692:	c7 82 0f 02 00 00 76 	movl   $0x6d6e6276,0x20f(%edx)
  100699:	62 6e 6d 
  10069c:	66 c7 82 13 02 00 00 	movw   $0x2e2c,0x213(%edx)
  1006a3:	2c 2e 
  1006a5:	c6 82 15 02 00 00 2f 	movb   $0x2f,0x215(%edx)
  1006ac:	c7 82 ab 01 00 00 7c 	movl   $0x43585a7c,0x1ab(%edx)
  1006b3:	5a 58 43 
  1006b6:	c7 82 af 01 00 00 56 	movl   $0x4d4e4256,0x1af(%edx)
  1006bd:	42 4e 4d 
  1006c0:	66 c7 82 b3 01 00 00 	movw   $0x3e3c,0x1b3(%edx)
  1006c7:	3c 3e 
  1006c9:	c6 82 b5 01 00 00 3f 	movb   $0x3f,0x1b5(%edx)
  1006d0:	c6 82 19 02 00 00 20 	movb   $0x20,0x219(%edx)
  1006d7:	c6 82 b9 01 00 00 20 	movb   $0x20,0x1b9(%edx)
  1006de:	5d                   	pop    %ebp
  1006df:	c3                   	ret    

001006e0 <getKeyCode>:
  1006e0:	55                   	push   %ebp
  1006e1:	89 e5                	mov    %esp,%ebp
  1006e3:	57                   	push   %edi
  1006e4:	56                   	push   %esi
  1006e5:	53                   	push   %ebx
  1006e6:	e8 6d 01 00 00       	call   100858 <__x86.get_pc_thunk.di>
  1006eb:	81 c7 15 29 00 00    	add    $0x2915,%edi
  1006f1:	ba 60 00 00 00       	mov    $0x60,%edx
  1006f6:	ec                   	in     (%dx),%al
  1006f7:	0f b6 d8             	movzbl %al,%ebx
  1006fa:	ba 61 00 00 00       	mov    $0x61,%edx
  1006ff:	ec                   	in     (%dx),%al
  100700:	89 c6                	mov    %eax,%esi
  100702:	83 c8 80             	or     $0xffffff80,%eax
  100705:	ee                   	out    %al,(%dx)
  100706:	89 f0                	mov    %esi,%eax
  100708:	ee                   	out    %al,(%dx)
  100709:	81 fb d8 00 00 00    	cmp    $0xd8,%ebx
  10070f:	77 4b                	ja     10075c <getKeyCode+0x7c>
  100711:	80 fb 3a             	cmp    $0x3a,%bl
  100714:	74 52                	je     100768 <getKeyCode+0x88>
  100716:	0f 86 9c 00 00 00    	jbe    1007b8 <getKeyCode+0xd8>
  10071c:	80 fb b6             	cmp    $0xb6,%bl
  10071f:	74 7f                	je     1007a0 <getKeyCode+0xc0>
  100721:	80 fb ba             	cmp    $0xba,%bl
  100724:	75 72                	jne    100798 <getKeyCode+0xb8>
  100726:	83 bf 60 01 00 00 02 	cmpl   $0x2,0x160(%edi)
  10072d:	0f 85 dd 00 00 00    	jne    100810 <getKeyCode+0x130>
  100733:	c7 87 60 01 00 00 00 	movl   $0x0,0x160(%edi)
  10073a:	00 00 00 
  10073d:	8d 87 e0 01 00 00    	lea    0x1e0(%edi),%eax
  100743:	39 87 64 01 00 00    	cmp    %eax,0x164(%edi)
  100749:	0f 84 ab 00 00 00    	je     1007fa <getKeyCode+0x11a>
  10074f:	89 87 64 01 00 00    	mov    %eax,0x164(%edi)
  100755:	bb ba 00 00 00       	mov    $0xba,%ebx
  10075a:	eb 02                	jmp    10075e <getKeyCode+0x7e>
  10075c:	31 db                	xor    %ebx,%ebx
  10075e:	89 d8                	mov    %ebx,%eax
  100760:	5b                   	pop    %ebx
  100761:	5e                   	pop    %esi
  100762:	5f                   	pop    %edi
  100763:	5d                   	pop    %ebp
  100764:	c3                   	ret    
  100765:	8d 76 00             	lea    0x0(%esi),%esi
  100768:	8b 87 60 01 00 00    	mov    0x160(%edi),%eax
  10076e:	85 c0                	test   %eax,%eax
  100770:	75 52                	jne    1007c4 <getKeyCode+0xe4>
  100772:	c7 87 60 01 00 00 01 	movl   $0x1,0x160(%edi)
  100779:	00 00 00 
  10077c:	8d 87 e0 01 00 00    	lea    0x1e0(%edi),%eax
  100782:	39 87 64 01 00 00    	cmp    %eax,0x164(%edi)
  100788:	74 5a                	je     1007e4 <getKeyCode+0x104>
  10078a:	89 87 64 01 00 00    	mov    %eax,0x164(%edi)
  100790:	bb 3a 00 00 00       	mov    $0x3a,%ebx
  100795:	eb c7                	jmp    10075e <getKeyCode+0x7e>
  100797:	90                   	nop
  100798:	80 fb aa             	cmp    $0xaa,%bl
  10079b:	75 c1                	jne    10075e <getKeyCode+0x7e>
  10079d:	8d 76 00             	lea    0x0(%esi),%esi
  1007a0:	8d 87 e0 01 00 00    	lea    0x1e0(%edi),%eax
  1007a6:	39 87 64 01 00 00    	cmp    %eax,0x164(%edi)
  1007ac:	74 6e                	je     10081c <getKeyCode+0x13c>
  1007ae:	89 87 64 01 00 00    	mov    %eax,0x164(%edi)
  1007b4:	eb a8                	jmp    10075e <getKeyCode+0x7e>
  1007b6:	66 90                	xchg   %ax,%ax
  1007b8:	80 fb 2a             	cmp    $0x2a,%bl
  1007bb:	74 e3                	je     1007a0 <getKeyCode+0xc0>
  1007bd:	80 fb 36             	cmp    $0x36,%bl
  1007c0:	75 9c                	jne    10075e <getKeyCode+0x7e>
  1007c2:	eb dc                	jmp    1007a0 <getKeyCode+0xc0>
  1007c4:	48                   	dec    %eax
  1007c5:	74 09                	je     1007d0 <getKeyCode+0xf0>
  1007c7:	bb 3a 00 00 00       	mov    $0x3a,%ebx
  1007cc:	eb 90                	jmp    10075e <getKeyCode+0x7e>
  1007ce:	66 90                	xchg   %ax,%ax
  1007d0:	c7 87 60 01 00 00 02 	movl   $0x2,0x160(%edi)
  1007d7:	00 00 00 
  1007da:	bb 3a 00 00 00       	mov    $0x3a,%ebx
  1007df:	e9 7a ff ff ff       	jmp    10075e <getKeyCode+0x7e>
  1007e4:	8d 87 80 01 00 00    	lea    0x180(%edi),%eax
  1007ea:	89 87 64 01 00 00    	mov    %eax,0x164(%edi)
  1007f0:	bb 3a 00 00 00       	mov    $0x3a,%ebx
  1007f5:	e9 64 ff ff ff       	jmp    10075e <getKeyCode+0x7e>
  1007fa:	8d 87 80 01 00 00    	lea    0x180(%edi),%eax
  100800:	89 87 64 01 00 00    	mov    %eax,0x164(%edi)
  100806:	bb ba 00 00 00       	mov    $0xba,%ebx
  10080b:	e9 4e ff ff ff       	jmp    10075e <getKeyCode+0x7e>
  100810:	bb ba 00 00 00       	mov    $0xba,%ebx
  100815:	e9 44 ff ff ff       	jmp    10075e <getKeyCode+0x7e>
  10081a:	66 90                	xchg   %ax,%ax
  10081c:	8d 87 80 01 00 00    	lea    0x180(%edi),%eax
  100822:	89 87 64 01 00 00    	mov    %eax,0x164(%edi)
  100828:	e9 31 ff ff ff       	jmp    10075e <getKeyCode+0x7e>
  10082d:	8d 76 00             	lea    0x0(%esi),%esi

00100830 <getChar>:
  100830:	55                   	push   %ebp
  100831:	89 e5                	mov    %esp,%ebp
  100833:	e8 06 fc ff ff       	call   10043e <__x86.get_pc_thunk.dx>
  100838:	81 c2 c8 27 00 00    	add    $0x27c8,%edx
  10083e:	8b 45 08             	mov    0x8(%ebp),%eax
  100841:	83 f8 57             	cmp    $0x57,%eax
  100844:	77 0e                	ja     100854 <getChar+0x24>
  100846:	8b 92 64 01 00 00    	mov    0x164(%edx),%edx
  10084c:	8a 04 02             	mov    (%edx,%eax,1),%al
  10084f:	5d                   	pop    %ebp
  100850:	c3                   	ret    
  100851:	8d 76 00             	lea    0x0(%esi),%esi
  100854:	31 c0                	xor    %eax,%eax
  100856:	5d                   	pop    %ebp
  100857:	c3                   	ret    

00100858 <__x86.get_pc_thunk.di>:
  100858:	8b 3c 24             	mov    (%esp),%edi
  10085b:	c3                   	ret    

0010085c <GProtectFaultHandle>:
  10085c:	55                   	push   %ebp
  10085d:	89 e5                	mov    %esp,%ebp
  10085f:	53                   	push   %ebx
  100860:	83 ec 0c             	sub    $0xc,%esp
  100863:	e8 3b f8 ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  100868:	81 c3 98 27 00 00    	add    $0x2798,%ebx
  10086e:	6a 2c                	push   $0x2c
  100870:	8d 83 5a df ff ff    	lea    -0x20a6(%ebx),%eax
  100876:	50                   	push   %eax
  100877:	e8 84 f7 ff ff       	call   100000 <abort>
  10087c:	83 c4 10             	add    $0x10,%esp
  10087f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100882:	c9                   	leave  
  100883:	c3                   	ret    

00100884 <KeyboardHandle>:
  100884:	55                   	push   %ebp
  100885:	89 e5                	mov    %esp,%ebp
  100887:	57                   	push   %edi
  100888:	56                   	push   %esi
  100889:	53                   	push   %ebx
  10088a:	83 ec 1c             	sub    $0x1c,%esp
  10088d:	e8 11 f8 ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  100892:	81 c3 6e 27 00 00    	add    $0x276e,%ebx
  100898:	e8 43 fe ff ff       	call   1006e0 <getKeyCode>
  10089d:	83 f8 0e             	cmp    $0xe,%eax
  1008a0:	0f 84 82 00 00 00    	je     100928 <KeyboardHandle+0xa4>
  1008a6:	83 f8 1c             	cmp    $0x1c,%eax
  1008a9:	74 31                	je     1008dc <KeyboardHandle+0x58>
  1008ab:	3d 80 00 00 00       	cmp    $0x80,%eax
  1008b0:	0f 86 ae 00 00 00    	jbe    100964 <KeyboardHandle+0xe0>
  1008b6:	c7 c0 4c 31 10 00    	mov    $0x10314c,%eax
  1008bc:	8b 00                	mov    (%eax),%eax
  1008be:	c7 c2 50 31 10 00    	mov    $0x103150,%edx
  1008c4:	8b 12                	mov    (%edx),%edx
  1008c6:	83 ec 08             	sub    $0x8,%esp
  1008c9:	50                   	push   %eax
  1008ca:	52                   	push   %edx
  1008cb:	e8 00 fc ff ff       	call   1004d0 <updateCursor>
  1008d0:	83 c4 10             	add    $0x10,%esp
  1008d3:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1008d6:	5b                   	pop    %ebx
  1008d7:	5e                   	pop    %esi
  1008d8:	5f                   	pop    %edi
  1008d9:	5d                   	pop    %ebp
  1008da:	c3                   	ret    
  1008db:	90                   	nop
  1008dc:	c7 c2 c0 42 10 00    	mov    $0x1042c0,%edx
  1008e2:	8b 02                	mov    (%edx),%eax
  1008e4:	8d 48 01             	lea    0x1(%eax),%ecx
  1008e7:	89 0a                	mov    %ecx,(%edx)
  1008e9:	c7 c2 e0 42 10 00    	mov    $0x1042e0,%edx
  1008ef:	c7 04 82 0a 00 00 00 	movl   $0xa,(%edx,%eax,4)
  1008f6:	c7 c6 50 31 10 00    	mov    $0x103150,%esi
  1008fc:	8b 06                	mov    (%esi),%eax
  1008fe:	8d 50 01             	lea    0x1(%eax),%edx
  100901:	89 16                	mov    %edx,(%esi)
  100903:	c7 c7 4c 31 10 00    	mov    $0x10314c,%edi
  100909:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  10090f:	c7 83 3c 02 00 00 00 	movl   $0x0,0x23c(%ebx)
  100916:	00 00 00 
  100919:	83 fa 19             	cmp    $0x19,%edx
  10091c:	0f 84 d2 00 00 00    	je     1009f4 <KeyboardHandle+0x170>
  100922:	31 c0                	xor    %eax,%eax
  100924:	eb a0                	jmp    1008c6 <KeyboardHandle+0x42>
  100926:	66 90                	xchg   %ax,%ax
  100928:	c7 c1 4c 31 10 00    	mov    $0x10314c,%ecx
  10092e:	8b 01                	mov    (%ecx),%eax
  100930:	c7 c2 50 31 10 00    	mov    $0x103150,%edx
  100936:	8b 12                	mov    (%edx),%edx
  100938:	85 c0                	test   %eax,%eax
  10093a:	7e 8a                	jle    1008c6 <KeyboardHandle+0x42>
  10093c:	3b 83 3c 02 00 00    	cmp    0x23c(%ebx),%eax
  100942:	7e 82                	jle    1008c6 <KeyboardHandle+0x42>
  100944:	48                   	dec    %eax
  100945:	89 01                	mov    %eax,(%ecx)
  100947:	8d 0c 92             	lea    (%edx,%edx,4),%ecx
  10094a:	c1 e1 04             	shl    $0x4,%ecx
  10094d:	01 c1                	add    %eax,%ecx
  10094f:	01 c9                	add    %ecx,%ecx
  100951:	81 c1 00 80 0b 00    	add    $0xb8000,%ecx
  100957:	be 00 0c 00 00       	mov    $0xc00,%esi
  10095c:	66 89 31             	mov    %si,(%ecx)
  10095f:	e9 62 ff ff ff       	jmp    1008c6 <KeyboardHandle+0x42>
  100964:	83 ec 0c             	sub    $0xc,%esp
  100967:	50                   	push   %eax
  100968:	e8 c3 fe ff ff       	call   100830 <getChar>
  10096d:	83 c4 10             	add    $0x10,%esp
  100970:	84 c0                	test   %al,%al
  100972:	0f 84 3e ff ff ff    	je     1008b6 <KeyboardHandle+0x32>
  100978:	83 ec 0c             	sub    $0xc,%esp
  10097b:	0f be f0             	movsbl %al,%esi
  10097e:	88 45 e7             	mov    %al,-0x19(%ebp)
  100981:	56                   	push   %esi
  100982:	e8 91 f7 ff ff       	call   100118 <putChar>
  100987:	c7 c1 c0 42 10 00    	mov    $0x1042c0,%ecx
  10098d:	8b 11                	mov    (%ecx),%edx
  10098f:	c7 c7 e0 42 10 00    	mov    $0x1042e0,%edi
  100995:	89 34 97             	mov    %esi,(%edi,%edx,4)
  100998:	42                   	inc    %edx
  100999:	83 c4 10             	add    $0x10,%esp
  10099c:	81 e2 ff 00 00 80    	and    $0x800000ff,%edx
  1009a2:	66 0f be 45 e7       	movsbw -0x19(%ebp),%ax
  1009a7:	79 08                	jns    1009b1 <KeyboardHandle+0x12d>
  1009a9:	4a                   	dec    %edx
  1009aa:	81 ca 00 ff ff ff    	or     $0xffffff00,%edx
  1009b0:	42                   	inc    %edx
  1009b1:	89 11                	mov    %edx,(%ecx)
  1009b3:	c7 c6 50 31 10 00    	mov    $0x103150,%esi
  1009b9:	8b 16                	mov    (%esi),%edx
  1009bb:	c7 c7 4c 31 10 00    	mov    $0x10314c,%edi
  1009c1:	80 cc 0c             	or     $0xc,%ah
  1009c4:	8d 0c 92             	lea    (%edx,%edx,4),%ecx
  1009c7:	c1 e1 04             	shl    $0x4,%ecx
  1009ca:	03 0f                	add    (%edi),%ecx
  1009cc:	01 c9                	add    %ecx,%ecx
  1009ce:	81 c1 00 80 0b 00    	add    $0xb8000,%ecx
  1009d4:	66 89 01             	mov    %ax,(%ecx)
  1009d7:	8b 07                	mov    (%edi),%eax
  1009d9:	40                   	inc    %eax
  1009da:	83 f8 50             	cmp    $0x50,%eax
  1009dd:	75 35                	jne    100a14 <KeyboardHandle+0x190>
  1009df:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  1009e5:	42                   	inc    %edx
  1009e6:	89 16                	mov    %edx,(%esi)
  1009e8:	83 fa 19             	cmp    $0x19,%edx
  1009eb:	0f 85 31 ff ff ff    	jne    100922 <KeyboardHandle+0x9e>
  1009f1:	8d 76 00             	lea    0x0(%esi),%esi
  1009f4:	e8 0f fb ff ff       	call   100508 <scrollScreen>
  1009f9:	c7 06 18 00 00 00    	movl   $0x18,(%esi)
  1009ff:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  100a05:	ba 18 00 00 00       	mov    $0x18,%edx
  100a0a:	31 c0                	xor    %eax,%eax
  100a0c:	e9 b5 fe ff ff       	jmp    1008c6 <KeyboardHandle+0x42>
  100a11:	8d 76 00             	lea    0x0(%esi),%esi
  100a14:	89 07                	mov    %eax,(%edi)
  100a16:	e9 ab fe ff ff       	jmp    1008c6 <KeyboardHandle+0x42>
  100a1b:	90                   	nop

00100a1c <syscallPrint>:
  100a1c:	55                   	push   %ebp
  100a1d:	89 e5                	mov    %esp,%ebp
  100a1f:	57                   	push   %edi
  100a20:	56                   	push   %esi
  100a21:	53                   	push   %ebx
  100a22:	83 ec 2c             	sub    $0x2c,%esp
  100a25:	e8 79 f6 ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  100a2a:	81 c3 d6 25 00 00    	add    $0x25d6,%ebx
  100a30:	8b 45 08             	mov    0x8(%ebp),%eax
  100a33:	c7 45 e4 23 00 00 00 	movl   $0x23,-0x1c(%ebp)
  100a3a:	8b 70 14             	mov    0x14(%eax),%esi
  100a3d:	8b 40 10             	mov    0x10(%eax),%eax
  100a40:	8e 45 e4             	mov    -0x1c(%ebp),%es
  100a43:	c7 c7 50 31 10 00    	mov    $0x103150,%edi
  100a49:	89 7d d0             	mov    %edi,-0x30(%ebp)
  100a4c:	8b 0f                	mov    (%edi),%ecx
  100a4e:	85 c0                	test   %eax,%eax
  100a50:	0f 8e 8e 00 00 00    	jle    100ae4 <syscallPrint+0xc8>
  100a56:	01 f0                	add    %esi,%eax
  100a58:	89 45 d4             	mov    %eax,-0x2c(%ebp)
  100a5b:	c7 c7 4c 31 10 00    	mov    $0x10314c,%edi
  100a61:	eb 2a                	jmp    100a8d <syscallPrint+0x71>
  100a63:	90                   	nop
  100a64:	66 0f be d2          	movsbw %dl,%dx
  100a68:	80 ce 0c             	or     $0xc,%dh
  100a6b:	8d 04 89             	lea    (%ecx,%ecx,4),%eax
  100a6e:	c1 e0 04             	shl    $0x4,%eax
  100a71:	03 07                	add    (%edi),%eax
  100a73:	01 c0                	add    %eax,%eax
  100a75:	05 00 80 0b 00       	add    $0xb8000,%eax
  100a7a:	66 89 10             	mov    %dx,(%eax)
  100a7d:	8b 07                	mov    (%edi),%eax
  100a7f:	40                   	inc    %eax
  100a80:	83 f8 50             	cmp    $0x50,%eax
  100a83:	74 10                	je     100a95 <syscallPrint+0x79>
  100a85:	89 07                	mov    %eax,(%edi)
  100a87:	46                   	inc    %esi
  100a88:	3b 75 d4             	cmp    -0x2c(%ebp),%esi
  100a8b:	74 38                	je     100ac5 <syscallPrint+0xa9>
  100a8d:	26 8a 16             	mov    %es:(%esi),%dl
  100a90:	80 fa 0a             	cmp    $0xa,%dl
  100a93:	75 cf                	jne    100a64 <syscallPrint+0x48>
  100a95:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  100a9b:	41                   	inc    %ecx
  100a9c:	8b 45 d0             	mov    -0x30(%ebp),%eax
  100a9f:	89 08                	mov    %ecx,(%eax)
  100aa1:	83 f9 19             	cmp    $0x19,%ecx
  100aa4:	75 e1                	jne    100a87 <syscallPrint+0x6b>
  100aa6:	e8 5d fa ff ff       	call   100508 <scrollScreen>
  100aab:	8b 45 d0             	mov    -0x30(%ebp),%eax
  100aae:	c7 00 18 00 00 00    	movl   $0x18,(%eax)
  100ab4:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  100aba:	b9 18 00 00 00       	mov    $0x18,%ecx
  100abf:	46                   	inc    %esi
  100ac0:	3b 75 d4             	cmp    -0x2c(%ebp),%esi
  100ac3:	75 c8                	jne    100a8d <syscallPrint+0x71>
  100ac5:	8b 07                	mov    (%edi),%eax
  100ac7:	89 83 3c 02 00 00    	mov    %eax,0x23c(%ebx)
  100acd:	83 ec 08             	sub    $0x8,%esp
  100ad0:	50                   	push   %eax
  100ad1:	51                   	push   %ecx
  100ad2:	e8 f9 f9 ff ff       	call   1004d0 <updateCursor>
  100ad7:	83 c4 10             	add    $0x10,%esp
  100ada:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100add:	5b                   	pop    %ebx
  100ade:	5e                   	pop    %esi
  100adf:	5f                   	pop    %edi
  100ae0:	5d                   	pop    %ebp
  100ae1:	c3                   	ret    
  100ae2:	66 90                	xchg   %ax,%ax
  100ae4:	c7 c7 4c 31 10 00    	mov    $0x10314c,%edi
  100aea:	eb d9                	jmp    100ac5 <syscallPrint+0xa9>

00100aec <syscallWrite>:
  100aec:	55                   	push   %ebp
  100aed:	89 e5                	mov    %esp,%ebp
  100aef:	8b 45 08             	mov    0x8(%ebp),%eax
  100af2:	8b 40 18             	mov    0x18(%eax),%eax
  100af5:	85 c0                	test   %eax,%eax
  100af7:	74 03                	je     100afc <syscallWrite+0x10>
  100af9:	5d                   	pop    %ebp
  100afa:	c3                   	ret    
  100afb:	90                   	nop
  100afc:	5d                   	pop    %ebp
  100afd:	e9 1a ff ff ff       	jmp    100a1c <syscallPrint>
  100b02:	66 90                	xchg   %ax,%ax

00100b04 <syscallGetChar>:
  100b04:	55                   	push   %ebp
  100b05:	89 e5                	mov    %esp,%ebp
  100b07:	57                   	push   %edi
  100b08:	56                   	push   %esi
  100b09:	53                   	push   %ebx
  100b0a:	83 ec 1c             	sub    $0x1c,%esp
  100b0d:	e8 91 f5 ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  100b12:	81 c3 ee 24 00 00    	add    $0x24ee,%ebx
  100b18:	c7 c7 e0 46 10 00    	mov    $0x1046e0,%edi
  100b1e:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  100b24:	c7 c0 c0 42 10 00    	mov    $0x1042c0,%eax
  100b2a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  100b30:	c7 c6 e0 42 10 00    	mov    $0x1042e0,%esi
  100b36:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
  100b3c:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
  100b43:	90                   	nop
  100b44:	fb                   	sti    
  100b45:	8b 07                	mov    (%edi),%eax
  100b47:	8b 04 86             	mov    (%esi,%eax,4),%eax
  100b4a:	83 ec 0c             	sub    $0xc,%esp
  100b4d:	0f be d0             	movsbl %al,%edx
  100b50:	89 45 e0             	mov    %eax,-0x20(%ebp)
  100b53:	52                   	push   %edx
  100b54:	89 55 e4             	mov    %edx,-0x1c(%ebp)
  100b57:	e8 bc f5 ff ff       	call   100118 <putChar>
  100b5c:	fa                   	cli    
  100b5d:	83 c4 10             	add    $0x10,%esp
  100b60:	8b 45 e0             	mov    -0x20(%ebp),%eax
  100b63:	84 c0                	test   %al,%al
  100b65:	8b 55 e4             	mov    -0x1c(%ebp),%edx
  100b68:	74 da                	je     100b44 <syscallGetChar+0x40>
  100b6a:	8b 45 08             	mov    0x8(%ebp),%eax
  100b6d:	89 50 1c             	mov    %edx,0x1c(%eax)
  100b70:	fb                   	sti    
  100b71:	8b 07                	mov    (%edi),%eax
  100b73:	8b 44 86 04          	mov    0x4(%esi,%eax,4),%eax
  100b77:	fa                   	cli    
  100b78:	84 c0                	test   %al,%al
  100b7a:	74 f4                	je     100b70 <syscallGetChar+0x6c>
  100b7c:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100b7f:	5b                   	pop    %ebx
  100b80:	5e                   	pop    %esi
  100b81:	5f                   	pop    %edi
  100b82:	5d                   	pop    %ebp
  100b83:	c3                   	ret    

00100b84 <syscallGetStr>:
  100b84:	55                   	push   %ebp
  100b85:	89 e5                	mov    %esp,%ebp
  100b87:	57                   	push   %edi
  100b88:	56                   	push   %esi
  100b89:	53                   	push   %ebx
  100b8a:	83 ec 18             	sub    $0x18,%esp
  100b8d:	e8 d9 f9 ff ff       	call   10056b <__x86.get_pc_thunk.ax>
  100b92:	05 6e 24 00 00       	add    $0x246e,%eax
  100b97:	8b 55 08             	mov    0x8(%ebp),%edx
  100b9a:	8b 5a 14             	mov    0x14(%edx),%ebx
  100b9d:	89 df                	mov    %ebx,%edi
  100b9f:	8b 72 10             	mov    0x10(%edx),%esi
  100ba2:	c7 c1 e0 46 10 00    	mov    $0x1046e0,%ecx
  100ba8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
  100bab:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
  100bb1:	c7 c2 c0 42 10 00    	mov    $0x1042c0,%edx
  100bb7:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
  100bbd:	c7 c0 e0 42 10 00    	mov    $0x1042e0,%eax
  100bc3:	89 45 dc             	mov    %eax,-0x24(%ebp)
  100bc6:	89 c1                	mov    %eax,%ecx
  100bc8:	8d 90 00 04 00 00    	lea    0x400(%eax),%edx
  100bce:	66 90                	xchg   %ax,%ax
  100bd0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  100bd6:	83 c0 04             	add    $0x4,%eax
  100bd9:	39 d0                	cmp    %edx,%eax
  100bdb:	75 f3                	jne    100bd0 <syscallGetStr+0x4c>
  100bdd:	31 d2                	xor    %edx,%edx
  100bdf:	85 f6                	test   %esi,%esi
  100be1:	7f 06                	jg     100be9 <syscallGetStr+0x65>
  100be3:	eb 60                	jmp    100c45 <syscallGetStr+0xc1>
  100be5:	8d 76 00             	lea    0x0(%esi),%esi
  100be8:	fb                   	sti    
  100be9:	8b 01                	mov    (%ecx),%eax
  100beb:	85 c0                	test   %eax,%eax
  100bed:	74 f9                	je     100be8 <syscallGetStr+0x64>
  100bef:	8d 7a 01             	lea    0x1(%edx),%edi
  100bf2:	fa                   	cli    
  100bf3:	3c 0a                	cmp    $0xa,%al
  100bf5:	74 0b                	je     100c02 <syscallGetStr+0x7e>
  100bf7:	83 c1 04             	add    $0x4,%ecx
  100bfa:	39 fe                	cmp    %edi,%esi
  100bfc:	74 3d                	je     100c3b <syscallGetStr+0xb7>
  100bfe:	89 fa                	mov    %edi,%edx
  100c00:	eb e7                	jmp    100be9 <syscallGetStr+0x65>
  100c02:	01 df                	add    %ebx,%edi
  100c04:	8b 45 e0             	mov    -0x20(%ebp),%eax
  100c07:	8b 00                	mov    (%eax),%eax
  100c09:	c7 45 f0 23 00 00 00 	movl   $0x23,-0x10(%ebp)
  100c10:	8e 45 f0             	mov    -0x10(%ebp),%es
  100c13:	39 c2                	cmp    %eax,%edx
  100c15:	7e 18                	jle    100c2f <syscallGetStr+0xab>
  100c17:	01 da                	add    %ebx,%edx
  100c19:	29 c2                	sub    %eax,%edx
  100c1b:	29 d8                	sub    %ebx,%eax
  100c1d:	8b 75 dc             	mov    -0x24(%ebp),%esi
  100c20:	8d 0c 86             	lea    (%esi,%eax,4),%ecx
  100c23:	90                   	nop
  100c24:	8b 04 99             	mov    (%ecx,%ebx,4),%eax
  100c27:	26 88 03             	mov    %al,%es:(%ebx)
  100c2a:	43                   	inc    %ebx
  100c2b:	39 d3                	cmp    %edx,%ebx
  100c2d:	75 f5                	jne    100c24 <syscallGetStr+0xa0>
  100c2f:	26 c6 07 00          	movb   $0x0,%es:(%edi)
  100c33:	83 c4 18             	add    $0x18,%esp
  100c36:	5b                   	pop    %ebx
  100c37:	5e                   	pop    %esi
  100c38:	5f                   	pop    %edi
  100c39:	5d                   	pop    %ebp
  100c3a:	c3                   	ret    
  100c3b:	8d 3c 33             	lea    (%ebx,%esi,1),%edi
  100c3e:	8b 45 e0             	mov    -0x20(%ebp),%eax
  100c41:	8b 00                	mov    (%eax),%eax
  100c43:	eb c4                	jmp    100c09 <syscallGetStr+0x85>
  100c45:	31 c0                	xor    %eax,%eax
  100c47:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  100c4c:	eb bb                	jmp    100c09 <syscallGetStr+0x85>
  100c4e:	66 90                	xchg   %ax,%ax

00100c50 <syscallRead>:
  100c50:	55                   	push   %ebp
  100c51:	89 e5                	mov    %esp,%ebp
  100c53:	8b 45 08             	mov    0x8(%ebp),%eax
  100c56:	8b 40 18             	mov    0x18(%eax),%eax
  100c59:	85 c0                	test   %eax,%eax
  100c5b:	74 0f                	je     100c6c <syscallRead+0x1c>
  100c5d:	48                   	dec    %eax
  100c5e:	75 08                	jne    100c68 <syscallRead+0x18>
  100c60:	5d                   	pop    %ebp
  100c61:	e9 1e ff ff ff       	jmp    100b84 <syscallGetStr>
  100c66:	66 90                	xchg   %ax,%ax
  100c68:	5d                   	pop    %ebp
  100c69:	c3                   	ret    
  100c6a:	66 90                	xchg   %ax,%ax
  100c6c:	5d                   	pop    %ebp
  100c6d:	e9 92 fe ff ff       	jmp    100b04 <syscallGetChar>
  100c72:	66 90                	xchg   %ax,%ax

00100c74 <syscallHandle>:
  100c74:	55                   	push   %ebp
  100c75:	89 e5                	mov    %esp,%ebp
  100c77:	8b 55 08             	mov    0x8(%ebp),%edx
  100c7a:	8b 42 1c             	mov    0x1c(%edx),%eax
  100c7d:	85 c0                	test   %eax,%eax
  100c7f:	74 07                	je     100c88 <syscallHandle+0x14>
  100c81:	48                   	dec    %eax
  100c82:	75 0b                	jne    100c8f <syscallHandle+0x1b>
  100c84:	5d                   	pop    %ebp
  100c85:	eb c9                	jmp    100c50 <syscallRead>
  100c87:	90                   	nop
  100c88:	8b 42 18             	mov    0x18(%edx),%eax
  100c8b:	85 c0                	test   %eax,%eax
  100c8d:	74 05                	je     100c94 <syscallHandle+0x20>
  100c8f:	5d                   	pop    %ebp
  100c90:	c3                   	ret    
  100c91:	8d 76 00             	lea    0x0(%esi),%esi
  100c94:	5d                   	pop    %ebp
  100c95:	e9 82 fd ff ff       	jmp    100a1c <syscallPrint>
  100c9a:	66 90                	xchg   %ax,%ax

00100c9c <irqHandle>:
  100c9c:	55                   	push   %ebp
  100c9d:	89 e5                	mov    %esp,%ebp
  100c9f:	53                   	push   %ebx
  100ca0:	50                   	push   %eax
  100ca1:	e8 fd f3 ff ff       	call   1000a3 <__x86.get_pc_thunk.bx>
  100ca6:	81 c3 5a 23 00 00    	add    $0x235a,%ebx
  100cac:	b8 10 00 00 00       	mov    $0x10,%eax
  100cb1:	8e d8                	mov    %eax,%ds
  100cb3:	8b 45 08             	mov    0x8(%ebp),%eax
  100cb6:	8b 40 20             	mov    0x20(%eax),%eax
  100cb9:	83 f8 21             	cmp    $0x21,%eax
  100cbc:	74 4e                	je     100d0c <irqHandle+0x70>
  100cbe:	3d 80 00 00 00       	cmp    $0x80,%eax
  100cc3:	74 3b                	je     100d00 <irqHandle+0x64>
  100cc5:	83 f8 0d             	cmp    $0xd,%eax
  100cc8:	74 1a                	je     100ce4 <irqHandle+0x48>
  100cca:	83 ec 08             	sub    $0x8,%esp
  100ccd:	6a 27                	push   $0x27
  100ccf:	8d 83 5a df ff ff    	lea    -0x20a6(%ebx),%eax
  100cd5:	50                   	push   %eax
  100cd6:	e8 25 f3 ff ff       	call   100000 <abort>
  100cdb:	83 c4 10             	add    $0x10,%esp
  100cde:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100ce1:	c9                   	leave  
  100ce2:	c3                   	ret    
  100ce3:	90                   	nop
  100ce4:	83 ec 08             	sub    $0x8,%esp
  100ce7:	6a 2c                	push   $0x2c
  100ce9:	8d 83 5a df ff ff    	lea    -0x20a6(%ebx),%eax
  100cef:	50                   	push   %eax
  100cf0:	e8 0b f3 ff ff       	call   100000 <abort>
  100cf5:	83 c4 10             	add    $0x10,%esp
  100cf8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100cfb:	c9                   	leave  
  100cfc:	c3                   	ret    
  100cfd:	8d 76 00             	lea    0x0(%esi),%esi
  100d00:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100d03:	c9                   	leave  
  100d04:	e9 6b ff ff ff       	jmp    100c74 <syscallHandle>
  100d09:	8d 76 00             	lea    0x0(%esi),%esi
  100d0c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100d0f:	c9                   	leave  
  100d10:	e9 6f fb ff ff       	jmp    100884 <KeyboardHandle>
  100d15:	66 90                	xchg   %ax,%ax
  100d17:	90                   	nop

00100d18 <initIdt>:
  100d18:	55                   	push   %ebp
  100d19:	89 e5                	mov    %esp,%ebp
  100d1b:	57                   	push   %edi
  100d1c:	56                   	push   %esi
  100d1d:	53                   	push   %ebx
  100d1e:	e8 a8 01 00 00       	call   100ecb <__x86.get_pc_thunk.si>
  100d23:	81 c6 dd 22 00 00    	add    $0x22dd,%esi
  100d29:	c7 c2 0b 0f 10 00    	mov    $0x100f0b,%edx
  100d2f:	89 d0                	mov    %edx,%eax
  100d31:	c1 e8 10             	shr    $0x10,%eax
  100d34:	89 c3                	mov    %eax,%ebx
  100d36:	c7 c7 00 47 10 00    	mov    $0x104700,%edi
  100d3c:	8d 8f 00 08 00 00    	lea    0x800(%edi),%ecx
  100d42:	89 f8                	mov    %edi,%eax
  100d44:	66 89 10             	mov    %dx,(%eax)
  100d47:	c7 40 02 08 00 00 8f 	movl   $0x8f000008,0x2(%eax)
  100d4e:	66 89 58 06          	mov    %bx,0x6(%eax)
  100d52:	83 c0 08             	add    $0x8,%eax
  100d55:	39 c1                	cmp    %eax,%ecx
  100d57:	75 eb                	jne    100d44 <initIdt+0x2c>
  100d59:	c7 c0 11 0f 10 00    	mov    $0x100f11,%eax
  100d5f:	66 89 47 30          	mov    %ax,0x30(%edi)
  100d63:	c7 47 32 08 00 00 8f 	movl   $0x8f000008,0x32(%edi)
  100d6a:	c1 e8 10             	shr    $0x10,%eax
  100d6d:	66 89 47 36          	mov    %ax,0x36(%edi)
  100d71:	c7 c0 15 0f 10 00    	mov    $0x100f15,%eax
  100d77:	66 89 47 40          	mov    %ax,0x40(%edi)
  100d7b:	c7 47 42 08 00 00 8f 	movl   $0x8f000008,0x42(%edi)
  100d82:	c1 e8 10             	shr    $0x10,%eax
  100d85:	66 89 47 46          	mov    %ax,0x46(%edi)
  100d89:	c7 c0 19 0f 10 00    	mov    $0x100f19,%eax
  100d8f:	66 89 47 50          	mov    %ax,0x50(%edi)
  100d93:	c7 47 52 08 00 00 8f 	movl   $0x8f000008,0x52(%edi)
  100d9a:	c1 e8 10             	shr    $0x10,%eax
  100d9d:	66 89 47 56          	mov    %ax,0x56(%edi)
  100da1:	c7 c0 1d 0f 10 00    	mov    $0x100f1d,%eax
  100da7:	66 89 47 58          	mov    %ax,0x58(%edi)
  100dab:	c7 47 5a 08 00 00 8f 	movl   $0x8f000008,0x5a(%edi)
  100db2:	c1 e8 10             	shr    $0x10,%eax
  100db5:	66 89 47 5e          	mov    %ax,0x5e(%edi)
  100db9:	c7 c0 21 0f 10 00    	mov    $0x100f21,%eax
  100dbf:	66 89 47 60          	mov    %ax,0x60(%edi)
  100dc3:	c7 47 62 08 00 00 8f 	movl   $0x8f000008,0x62(%edi)
  100dca:	c1 e8 10             	shr    $0x10,%eax
  100dcd:	66 89 47 66          	mov    %ax,0x66(%edi)
  100dd1:	c7 c0 25 0f 10 00    	mov    $0x100f25,%eax
  100dd7:	66 89 47 68          	mov    %ax,0x68(%edi)
  100ddb:	c7 47 6a 08 00 00 8f 	movl   $0x8f000008,0x6a(%edi)
  100de2:	c1 e8 10             	shr    $0x10,%eax
  100de5:	66 89 47 6e          	mov    %ax,0x6e(%edi)
  100de9:	c7 c0 29 0f 10 00    	mov    $0x100f29,%eax
  100def:	66 89 47 70          	mov    %ax,0x70(%edi)
  100df3:	c7 47 72 08 00 00 8f 	movl   $0x8f000008,0x72(%edi)
  100dfa:	c1 e8 10             	shr    $0x10,%eax
  100dfd:	66 89 47 76          	mov    %ax,0x76(%edi)
  100e01:	c7 c0 2d 0f 10 00    	mov    $0x100f2d,%eax
  100e07:	66 89 87 88 00 00 00 	mov    %ax,0x88(%edi)
  100e0e:	c7 87 8a 00 00 00 08 	movl   $0x8f000008,0x8a(%edi)
  100e15:	00 00 8f 
  100e18:	c1 e8 10             	shr    $0x10,%eax
  100e1b:	66 89 87 8e 00 00 00 	mov    %ax,0x8e(%edi)
  100e22:	c7 c0 31 0f 10 00    	mov    $0x100f31,%eax
  100e28:	66 89 87 f0 00 00 00 	mov    %ax,0xf0(%edi)
  100e2f:	c7 87 f2 00 00 00 08 	movl   $0x8f000008,0xf2(%edi)
  100e36:	00 00 8f 
  100e39:	c1 e8 10             	shr    $0x10,%eax
  100e3c:	66 89 87 f6 00 00 00 	mov    %ax,0xf6(%edi)
  100e43:	c7 c0 35 0f 10 00    	mov    $0x100f35,%eax
  100e49:	66 89 87 08 01 00 00 	mov    %ax,0x108(%edi)
  100e50:	c7 87 0a 01 00 00 08 	movl   $0x8f000008,0x10a(%edi)
  100e57:	00 00 8f 
  100e5a:	c1 e8 10             	shr    $0x10,%eax
  100e5d:	66 89 87 0e 01 00 00 	mov    %ax,0x10e(%edi)
  100e64:	c7 c2 3f 0f 10 00    	mov    $0x100f3f,%edx
  100e6a:	66 89 97 00 04 00 00 	mov    %dx,0x400(%edi)
  100e71:	66 c7 87 02 04 00 00 	movw   $0xb,0x402(%edi)
  100e78:	0b 00 
  100e7a:	c6 87 04 04 00 00 00 	movb   $0x0,0x404(%edi)
  100e81:	8a 87 05 04 00 00    	mov    0x405(%edi),%al
  100e87:	83 e0 f0             	and    $0xfffffff0,%eax
  100e8a:	83 c8 0e             	or     $0xe,%eax
  100e8d:	83 e0 ef             	and    $0xffffffef,%eax
  100e90:	83 c8 e0             	or     $0xffffffe0,%eax
  100e93:	88 87 05 04 00 00    	mov    %al,0x405(%edi)
  100e99:	c1 ea 10             	shr    $0x10,%edx
  100e9c:	66 89 97 06 04 00 00 	mov    %dx,0x406(%edi)
  100ea3:	66 c7 86 40 02 00 00 	movw   $0x7ff,0x240(%esi)
  100eaa:	ff 07 
  100eac:	66 89 be 42 02 00 00 	mov    %di,0x242(%esi)
  100eb3:	c1 ef 10             	shr    $0x10,%edi
  100eb6:	66 89 be 44 02 00 00 	mov    %di,0x244(%esi)
  100ebd:	8d 86 40 02 00 00    	lea    0x240(%esi),%eax
  100ec3:	0f 01 18             	lidtl  (%eax)
  100ec6:	5b                   	pop    %ebx
  100ec7:	5e                   	pop    %esi
  100ec8:	5f                   	pop    %edi
  100ec9:	5d                   	pop    %ebp
  100eca:	c3                   	ret    

00100ecb <__x86.get_pc_thunk.si>:
  100ecb:	8b 34 24             	mov    (%esp),%esi
  100ece:	c3                   	ret    
  100ecf:	90                   	nop

00100ed0 <initIntr>:
  100ed0:	55                   	push   %ebp
  100ed1:	89 e5                	mov    %esp,%ebp
  100ed3:	53                   	push   %ebx
  100ed4:	b0 11                	mov    $0x11,%al
  100ed6:	ba 20 00 00 00       	mov    $0x20,%edx
  100edb:	ee                   	out    %al,(%dx)
  100edc:	ba a0 00 00 00       	mov    $0xa0,%edx
  100ee1:	ee                   	out    %al,(%dx)
  100ee2:	bb 21 00 00 00       	mov    $0x21,%ebx
  100ee7:	b0 20                	mov    $0x20,%al
  100ee9:	89 da                	mov    %ebx,%edx
  100eeb:	ee                   	out    %al,(%dx)
  100eec:	b9 a1 00 00 00       	mov    $0xa1,%ecx
  100ef1:	b0 28                	mov    $0x28,%al
  100ef3:	89 ca                	mov    %ecx,%edx
  100ef5:	ee                   	out    %al,(%dx)
  100ef6:	b0 04                	mov    $0x4,%al
  100ef8:	89 da                	mov    %ebx,%edx
  100efa:	ee                   	out    %al,(%dx)
  100efb:	b0 02                	mov    $0x2,%al
  100efd:	89 ca                	mov    %ecx,%edx
  100eff:	ee                   	out    %al,(%dx)
  100f00:	b0 03                	mov    $0x3,%al
  100f02:	89 da                	mov    %ebx,%edx
  100f04:	ee                   	out    %al,(%dx)
  100f05:	89 ca                	mov    %ecx,%edx
  100f07:	ee                   	out    %al,(%dx)
  100f08:	5b                   	pop    %ebx
  100f09:	5d                   	pop    %ebp
  100f0a:	c3                   	ret    

00100f0b <irqEmpty>:
  100f0b:	6a 00                	push   $0x0
  100f0d:	6a ff                	push   $0xffffffff
  100f0f:	eb 37                	jmp    100f48 <asmDoIrq>

00100f11 <irqErrorCode>:
  100f11:	6a ff                	push   $0xffffffff
  100f13:	eb 33                	jmp    100f48 <asmDoIrq>

00100f15 <irqDoubleFault>:
  100f15:	6a ff                	push   $0xffffffff
  100f17:	eb 2f                	jmp    100f48 <asmDoIrq>

00100f19 <irqInvalidTSS>:
  100f19:	6a ff                	push   $0xffffffff
  100f1b:	eb 2b                	jmp    100f48 <asmDoIrq>

00100f1d <irqSegNotPresent>:
  100f1d:	6a ff                	push   $0xffffffff
  100f1f:	eb 27                	jmp    100f48 <asmDoIrq>

00100f21 <irqStackSegFault>:
  100f21:	6a ff                	push   $0xffffffff
  100f23:	eb 23                	jmp    100f48 <asmDoIrq>

00100f25 <irqGProtectFault>:
  100f25:	6a 0d                	push   $0xd
  100f27:	eb 1f                	jmp    100f48 <asmDoIrq>

00100f29 <irqPageFault>:
  100f29:	6a ff                	push   $0xffffffff
  100f2b:	eb 1b                	jmp    100f48 <asmDoIrq>

00100f2d <irqAlignCheck>:
  100f2d:	6a ff                	push   $0xffffffff
  100f2f:	eb 17                	jmp    100f48 <asmDoIrq>

00100f31 <irqSecException>:
  100f31:	6a ff                	push   $0xffffffff
  100f33:	eb 13                	jmp    100f48 <asmDoIrq>

00100f35 <irqKeyboard>:
  100f35:	6a 00                	push   $0x0
  100f37:	ff 35 21 00 00 00    	pushl  0x21
  100f3d:	eb 09                	jmp    100f48 <asmDoIrq>

00100f3f <irqSyscall>:
  100f3f:	6a 00                	push   $0x0
  100f41:	68 80 00 00 00       	push   $0x80
  100f46:	eb 00                	jmp    100f48 <asmDoIrq>

00100f48 <asmDoIrq>:
  100f48:	60                   	pusha  
  100f49:	54                   	push   %esp
  100f4a:	e8 4d fd ff ff       	call   100c9c <irqHandle>
  100f4f:	83 c4 04             	add    $0x4,%esp
  100f52:	61                   	popa   
  100f53:	83 c4 04             	add    $0x4,%esp
  100f56:	83 c4 04             	add    $0x4,%esp
  100f59:	cf                   	iret   
